Перем ирПортативный Экспорт;
Перем ирОбщий Экспорт;
Перем ирСервер Экспорт;
Перем ирКэш Экспорт;
Перем ирПривилегированный Экспорт;

Перем мИнтересныеСтрокиДерева;
Перем мТекущийИндекс;

Процедура ПриОткрытии()
	
	ОбновитьДерево();
	ОбновитьФильтр();
	ПодключитьОбработчикОжидания("ИндикацияКнопки", 0.2, Истина);
	
КонецПроцедуры

Функция ПолучитьРодителяВерхнегоУровня(Знач СтрокаДерева)
	
	Пока СтрокаДерева.Родитель <> Неопределено Цикл
		СтрокаДерева = СтрокаДерева.Родитель
	КонецЦикла; 
	Возврат СтрокаДерева;
	
КонецФункции

Процедура ИндикацияКнопки()
	
	Если ЭлементыФормы.Дерево.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	СтрокаДерева = ПолучитьРодителяВерхнегоУровня(ЭлементыФормы.Дерево.ТекущаяСтрока);
	Кнопка = ЭтаФорма.КоманднаяПанель.Кнопки.Найти(СтрокаДерева.Имя);
	Маркер = "<<<<!>>>>";
	Если Кнопка.Текст = Маркер Тогда
		Кнопка.Текст = СтрокаДерева.Текст;
	Иначе
		Кнопка.Текст = Маркер;
	КонецЕсли; 
	Кнопка.Пометка = Не Кнопка.Пометка;
	ПодключитьОбработчикОжидания("ИндикацияКнопки", 0.5, Истина);
	
КонецПроцедуры

Процедура ОбновитьДерево()
	
	//СтарыеКоординаты = ПолучитьКоординаты();
	Дерево.Строки.Очистить();
	Если ЭтаФорма.КоманднаяПанель <> Неопределено Тогда
		ЗаполнитьСтрокиИзКнопок(ЭтаФорма.КоманднаяПанель.Кнопки, Дерево.Строки);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьСтрокиИзКнопок(Кнопки, СтрокиДерева)
	
	Для Каждого Кнопка Из Кнопки Цикл
		Если Кнопка.ТипКнопки = ТипКнопкиКоманднойПанели.Разделитель Тогда
			Продолжить;
		КонецЕсли; 
		СтрокаДерева = СтрокиДерева.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДерева, Кнопка); 
		Если СтрокаДерева.Пояснение = СтрокаДерева.Подсказка Тогда
			СтрокаДерева.Пояснение = "";
		КонецЕсли; 
		Если СтрокаДерева.Подсказка = СтрокаДерева.Текст Тогда
			СтрокаДерева.Подсказка = "";
		КонецЕсли; 
		ПредставлениеСочетаниеКлавиш = ирОбщий.ПолучитьПреставлениеСочетанияКлавишЛкс(СтрокаДерева.СочетаниеКлавиш);
		Если Не ирОбщий.СтрокиРавныЛкс(ПредставлениеСочетаниеКлавиш, "Нет") Тогда
			СтрокаДерева.ПредставлениеСочетаниеКлавиш = ПредставлениеСочетаниеКлавиш;
		КонецЕсли; 
		Если Кнопка.ТипКнопки = ТипКнопкиКоманднойПанели.Подменю Тогда
			ЗаполнитьСтрокиИзКнопок(Кнопка.Кнопки, СтрокаДерева.Строки);
		КонецЕсли; 
	КонецЦикла;

КонецПроцедуры

Процедура ДеревоПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Картинка <> Неопределено Тогда
		ОформлениеСтроки.Ячейки.Текст.УстановитьКартинку(ДанныеСтроки.Картинка);
	КонецЕсли; 
	Если мИнтересныеСтрокиДерева.Найти(ДанныеСтроки) <> Неопределено Тогда
		ОформлениеСтроки.ЦветФона = ирОбщий.ПолучитьЦветСтиляЛкс("ирЦветФонаРасширенногоПредставленияЗначения");
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	ВосстановитьПометкиКнопок();
	
КонецПроцедуры

Процедура ДеревоПриАктивизацииСтроки(Элемент)
	
	ВосстановитьПометкиКнопок();
	
КонецПроцедуры

Процедура ВосстановитьПометкиКнопок()
	
	Для Каждого СтрокаДерева Из Дерево.Строки Цикл
		Кнопка = ЭтаФорма.КоманднаяПанель.Кнопки.Найти(СтрокаДерева.Имя);
		Кнопка.Текст = СтрокаДерева.Текст;
		Кнопка.Пометка = СтрокаДерева.Пометка;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьФильтр()
	
	мИнтересныеСтрокиДерева = Новый Массив();
	Если ЗначениеЗаполнено(СтрокаПоиска) Тогда
		ВсеСтроки = ирОбщий.ПолучитьВсеСтрокиДереваЗначенийЛкс(Дерево);
		Для Каждого СтрокаДерева Из ВсеСтроки Цикл
			Для Счетчик = 1 По Дерево.Колонки.Количество() Цикл
				Значение = СтрокаДерева[Счетчик - 1];
				Если ТипЗнч(Значение) = Тип("Строка") Тогда
					Значение = НРег(Значение);
					Если Найти(Значение, НРег(СтрокаПоиска)) > 0 Тогда
						мИнтересныеСтрокиДерева.Добавить(СтрокаДерева);
						Родитель = СтрокаДерева;
						Пока Родитель <> Неопределено Цикл
							Если Не ЭлементыФормы.Дерево.Развернут(Родитель) Тогда
								ЭлементыФормы.Дерево.Развернуть(Родитель);
							КонецЕсли; 
							Родитель = Родитель.Родитель;
						КонецЦикла; 
						Прервать;
					КонецЕсли; 
				КонецЕсли; 
			КонецЦикла;
		КонецЦикла;
		Если мИнтересныеСтрокиДерева.Количество() > 0 Тогда
			ЭлементыФормы.Дерево.ТекущаяСтрока = мИнтересныеСтрокиДерева[0];
		КонецЕсли; 
	КонецЕсли; 
	мТекущийИндекс = 0;
	
КонецПроцедуры

Процедура ФильтрПриИзменении(Элемент)
	
	ирОбщий.ПолеВводаСИсториейВыбора_ПриИзмененииЛкс(Элемент, "СтруктураКоманднойПанели");
	ОбновитьФильтр();
	
КонецПроцедуры

Процедура ФильтрНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	ирОбщий.ПолеВводаСИсториейВыбора_НачалоВыбораИзСпискаЛкс(Элемент, "СтруктураКоманднойПанели");
	
КонецПроцедуры

Процедура ВпередНажатие(Элемент)
	
	Если мИнтересныеСтрокиДерева.Количество() > 0 Тогда
		мТекущийИндекс = мТекущийИндекс + 1;
		Если мТекущийИндекс >= мИнтересныеСтрокиДерева.Количество() Тогда
			мТекущийИндекс = 0;
		КонецЕсли; 
		ЭлементыФормы.Дерево.ТекущаяСтрока = мИнтересныеСтрокиДерева[мТекущийИндекс];
	КонецЕсли; 
	
КонецПроцедуры

Процедура НазадНажатие(Элемент)
	
	Если мИнтересныеСтрокиДерева.Количество() > 0 Тогда
		мТекущийИндекс = мТекущийИндекс - 1;
		Если мТекущийИндекс < 0 Тогда
			мТекущийИндекс = мИнтересныеСтрокиДерева.Количество() - 1;
		КонецЕсли; 
		ЭлементыФормы.Дерево.ТекущаяСтрока = мИнтересныеСтрокиДерева[мТекущийИндекс];
	КонецЕсли; 

КонецПроцедуры

#Если Клиент Тогда
Контейнер = Новый Структура();
Оповестить("ирПолучитьБазовуюФорму", Контейнер);
Если Не Контейнер.Свойство("ирПортативный", ирПортативный) Тогда
	ПолноеИмяФайлаБазовогоМодуля = ВосстановитьЗначение("ирПолноеИмяФайлаОсновногоМодуля");
	ирПортативный = ВнешниеОбработки.ПолучитьФорму(ПолноеИмяФайлаБазовогоМодуля);
КонецЕсли; 
ирОбщий = ирПортативный.ПолучитьОбщийМодульЛкс("ирОбщий");
ирКэш = ирПортативный.ПолучитьОбщийМодульЛкс("ирКэш");
ирСервер = ирПортативный.ПолучитьОбщийМодульЛкс("ирСервер");
ирПривилегированный = ирПортативный.ПолучитьОбщийМодульЛкс("ирПривилегированный");
#КонецЕсли

ирОбщий.ИнициализироватьФормуЛкс(ЭтаФорма, "Обработка.ирПлатформа.Форма.СтруктураКоманднойПанели");
Дерево.Колонки.Добавить("Картинка");
Дерево.Колонки.Добавить("СочетаниеКлавиш");