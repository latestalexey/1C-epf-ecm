Перем ирПортативный Экспорт;
Перем ирОбщий Экспорт;
Перем ирСервер Экспорт;
Перем ирКэш Экспорт;
Перем ирПривилегированный Экспорт;

Процедура КнопкаВыполнитьНажатие(Кнопка)

	Индикатор = ирОбщий.ПолучитьИндикаторПроцессаЛкс(ТаблицаДокументов.Количество(), "Перепроведение");
	ДокументыДляУдаленияИзСписка = Новый Массив;
	Для Каждого Строка Из ТаблицаДокументов Цикл
		ирОбщий.ОбработатьИндикаторЛкс(Индикатор);
		Документ = Строка.Документ;
		ДокументОбъект = Документ.ПолучитьОбъект();
		Успех = Истина;
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			Успех = Ложь;
			Если ОстанавливатьсяПоОшибке Тогда
				ВызватьИсключение;
			Иначе
				ОписаниеОшибки = ИнформацияОбОшибке().Описание;
				Сообщить("Ошибка перепроведения " + ДокументОбъект + ": " + ОписаниеОшибки, СтатусСообщения.Важное);
			КонецЕсли;
		КонецПопытки; 
		Если Успех Тогда
			Сообщить("Перепроведен " + ДокументОбъект);
		КонецЕсли;
		ДокументыДляУдаленияИзСписка.Добавить(Документ);
	КонецЦикла;
	ирОбщий.ОсвободитьИндикаторПроцессаЛкс();
	Для Каждого Документ Из ДокументыДляУдаленияИзСписка Цикл
		Строка = ТаблицаДокументов.Найти(Документ, "Документ");
		ТаблицаДокументов.Удалить(Строка);
	КонецЦикла; 
	
КонецПроцедуры

#Если Клиент Тогда
Контейнер = Новый Структура();
Оповестить("ирПолучитьБазовуюФорму", Контейнер);
Если Не Контейнер.Свойство("ирПортативный", ирПортативный) Тогда
	ПолноеИмяФайлаБазовогоМодуля = ВосстановитьЗначение("ирПолноеИмяФайлаОсновногоМодуля");
	ирПортативный = ВнешниеОбработки.ПолучитьФорму(ПолноеИмяФайлаБазовогоМодуля);
КонецЕсли; 
ирОбщий = ирПортативный.ПолучитьОбщийМодульЛкс("ирОбщий");
ирКэш = ирПортативный.ПолучитьОбщийМодульЛкс("ирКэш");
ирСервер = ирПортативный.ПолучитьОбщийМодульЛкс("ирСервер");
ирПривилегированный = ирПортативный.ПолучитьОбщийМодульЛкс("ирПривилегированный");
#КонецЕсли

ирОбщий.ИнициализироватьФормуЛкс(ЭтаФорма, "Обработка.ирПоискДублейИЗаменаСсылок.Форма.ФормаПерепроведенияДокументов");
