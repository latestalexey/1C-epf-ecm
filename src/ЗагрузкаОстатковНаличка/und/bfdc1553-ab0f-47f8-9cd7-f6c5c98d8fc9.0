{3,
{42,0,0,0,0,1,0,1,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,0,0},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ИмяФайлаОбмена",1,0,
{1,0},
{1,0},
{2,
{1},
{0,ff3ec143-1d89-45d5-8265-592164d8cebb}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{31,
{3,0},0,0,2,2,1,2,2,2,2,2,1,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"ИмяФайлаОбменаНачалоВыбора",0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0},
{0,0,0},1,
{21,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ИмяФайлаОбменаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИмяФайлаОбменаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{4,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"ВыполнитьЗагрузку",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{5,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВыполнитьЗагрузкуРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3},"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",0,0,0,0,0,0,3,3,0,0,0},"&НаСервере
Процедура ПроверитьВерсию(Знач Версия)
	
	Версии = СтрРазделить(Версия, ""."");
	
	Если Версии.Количество() = 0 Тогда
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(""ru = 'Неканоническое представление версии формата обмена: <%1>.'""), Версия);
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Функция РазложитьФорматОбмена(Знач ФорматОбмена)
	
	//Результат = Новый Структура(""БазовыйФормат, Версия"");
	//
	//ЭлементыФормата = СтрРазделить(ФорматОбмена, ""/"");
	//
	//Если ЭлементыФормата.Количество() = 0 Тогда
	//	ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(""ru = 'Неканоническое имя формата обмена <%1>'""), ФорматОбмена);
	//КонецЕсли;
	//
	//Результат.Версия = ЭлементыФормата[ЭлементыФормата.ВГраница()];
	//
	//ПроверитьВерсию(Результат.Версия);
	//
	//ЭлементыФормата.Удалить(ЭлементыФормата.ВГраница());
	//
	//Результат.БазовыйФормат = СтрСоединить(ЭлементыФормата, ""/"");
	//
	//Возврат Результат;
	Результат = Новый Структура(""БазовыйФормат, Версия"");
	ЭлементыФормата = СтрРазделить(ФорматОбмена, ""/"");
	Если ЭлементыФормата.Количество() = 0 Тогда
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(""ru = 'Неканоническое имя формата обмена <%1>'""), ФорматОбмена);
	КонецЕсли; 
	Результат.Версия = ЭлементыФормата[ЭлементыФормата.ВГраница()];
	//ПроверитьВерсию(Результат.Версия); 
	ЭлементыФормата.Удалить(ЭлементыФормата.ВГраница());
	Результат.БазовыйФормат = СтрСоединить(ЭлементыФормата, ""/""); 
	Возврат Результат;
КонецФункции


&НаСервере
Процедура ОткрытьФайлЗагрузки(КомпонентыОбмена, ИмяФайлаОбмена) Экспорт
	ЭтоОбменЧерезПланОбмена = КомпонентыОбмена.ЭтоОбменЧерезПланОбмена;
	ЧтениеXML = Новый ЧтениеXML; 
	НомерИтерации = 0; 
	КомпонентыОбмена.ФлагОшибки = Истина; 
	Пока НомерИтерации = 0 Цикл 
		НомерИтерации = 1; 
		Попытка 
			ЧтениеXML.ОткрытьФайл(ИмяФайлаОбмена); 
			ЧтениеXML.Прочитать();
			// Message
		Исключение
			СтрокаСообщенияОбОшибке = НСтр(""ru = 'Ошибка при загрузке данных: %1'""); 
			СтрокаСообщенияОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаСообщенияОбОшибке, ОписаниеОшибки()); 
			ОбменДаннымиXDTOСервер.ЗаписатьВПротоколВыполнения(КомпонентыОбмена, СтрокаСообщенияОбОшибке); 
			Прервать; 
		КонецПопытки; 
		Если (ЧтениеXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента Или ЧтениеXML.ЛокальноеИмя <> ""Message"") Тогда 
			Если ОбменДаннымиXDTOСервер.СообщениеОтНеобновленнойНастройки(ЧтениеXML) Тогда 
				СтрокаСообщенияОбОшибке = НСтр(""ru = 'Получение данных от |источника, в котором не выполнено |обновление настройки синхронизации данных. Необходимо:'"") + Символы.ПС + НСтр(""ru = '1) Выполнить повторную | синхронизацию данных через некоторое время.'"") + Символы.ПС + НСтр(""ru = '2) Выполнить синхронизацию | данных на стороне источника, после этого |повторно выполнить синхронизацию данных в этой |информационной базе.'"") + Символы.ПС + НСтр(""ru = '(1 - для вида транспорта | Через интернет, 2 - для вида транспорта Другое)'""); 
				ОбменДаннымиXDTOСервер.ЗаписатьВПротоколВыполнения(КомпонентыОбмена, СтрокаСообщенияОбОшибке); 
			Иначе 
				ОбменДаннымиXDTOСервер.ЗаписатьВПротоколВыполнения(КомпонентыОбмена, 9); 
			КонецЕсли; 
			Прервать; 
		КонецЕсли; 
		ЧтениеXML.Прочитать(); 
		// Header 
		Если ЧтениеXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента Или ЧтениеXML.ЛокальноеИмя <> ""Header"" 
			Тогда ОбменДаннымиXDTOСервер.ЗаписатьВПротоколВыполнения(КомпонентыОбмена, 9); 
			Прервать; 
		КонецЕсли; 
		Header = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML, ФабрикаXDTO.Тип(""http://www.1c.ru/SSL/Exchange/Message"", ""Header"")); 
		Если ЧтениеXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента Или ЧтениеXML.ЛокальноеИмя <> ""Body"" Тогда
			ОбменДаннымиXDTOСервер.ЗаписатьВПротоколВыполнения(КомпонентыОбмена, 9); 
			Прервать; 
		КонецЕсли; 
		КомпонентыОбмена.XMLСхема = Header.Format; 
		ФорматОбмена = РазложитьФорматОбмена(Header.Format); 
		КомпонентыОбмена.ВерсияФорматаОбмена = ""1.0""; 
		КомпонентыОбмена.МенеджерОбмена = МенеджерОбменаЧерезУниверсальныйФормат; 
		ЧтениеXML.Прочитать(); 
		// Body 
		КомпонентыОбмена.ФлагОшибки = Ложь; 
	КонецЦикла; 
	Если КомпонентыОбмена.ФлагОшибки Тогда 
		ЧтениеXML.Закрыть(); 
	Иначе 
		КомпонентыОбмена.Вставить(""ФайлОбмена"", ЧтениеXML); 
	КонецЕсли;
	//ЭтоОбменЧерезПланОбмена = КомпонентыОбмена.ЭтоОбменЧерезПланОбмена;
	//
	//ЧтениеXML = Новый ЧтениеXML;
	//
	//НомерИтерации = 0;
	//КомпонентыОбмена.ФлагОшибки = Истина;
	//Пока НомерИтерации = 0 Цикл
	//	
	//	НомерИтерации = 1;
	//	
	//	Попытка
	//		ЧтениеXML.ОткрытьФайл(ИмяФайлаОбмена);
	//		ЧтениеXML.Прочитать(); // Message
	//		КомпонентыОбмена.Вставить(""ФайлОбмена"", ЧтениеXML);
	//	Исключение
	//		
	//		СтрокаСообщенияОбОшибке = НСтр(""ru = 'Ошибка при загрузке данных: %1'"");
	//		СтрокаСообщенияОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаСообщенияОбОшибке, ОписаниеОшибки());
	//		ОбменДаннымиXDTOСервер.ЗаписатьВПротоколВыполнения(КомпонентыОбмена, СтрокаСообщенияОбОшибке);
	//		Прервать;
	//		
	//	КонецПопытки;
	//	
	//	Если (ЧтениеXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента
	//		Или ЧтениеXML.ЛокальноеИмя <> ""Message"") Тогда
	//		Если ОбменДаннымиXDTOСервер.СообщениеОтНеобновленнойНастройки(ЧтениеXML) Тогда
	//			СтрокаСообщенияОбОшибке = НСтр(""ru = 'Получение данных от источника, в котором не выполнено
	//				|обновление настройки синхронизации данных. Необходимо:'"")
	//				+ Символы.ПС + НСтр(""ru = '1) Выполнить повторную синхронизацию данных через некоторое время.'"")
	//				+ Символы.ПС + НСтр(""ru = '2) Выполнить синхронизацию данных на стороне источника, после этого 
	//				|повторно выполнить синхронизацию данных в этой информационной базе.'"")
	//				+ Символы.ПС + НСтр(""ru = '(1 - для вида транспорта Через интернет, 2 - для вида транспорта Другое)'"");
	//			ОбменДаннымиXDTOСервер.ЗаписатьВПротоколВыполнения(КомпонентыОбмена, СтрокаСообщенияОбОшибке);
	//		Иначе
	//			ОбменДаннымиXDTOСервер.ЗаписатьВПротоколВыполнения(КомпонентыОбмена, 9);
	//		КонецЕсли;
	//		Прервать;
	//	КонецЕсли;
	//	
	//	ЧтениеXML.Прочитать(); // Header
	//	Если ЧтениеXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента
	//		Или ЧтениеXML.ЛокальноеИмя <> ""Header"" Тогда
	//		ОбменДаннымиXDTOСервер.ЗаписатьВПротоколВыполнения(КомпонентыОбмена, 9);
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Header = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML, ФабрикаXDTO.Тип(""http://www.1c.ru/SSL/Exchange/Message"", ""Header""));
	//	Если ЧтениеXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента
	//		Или ЧтениеXML.ЛокальноеИмя <> ""Body"" Тогда
	//		ОбменДаннымиXDTOСервер.ЗаписатьВПротоколВыполнения(КомпонентыОбмена, 9);
	//		Прервать;
	//	КонецЕсли;
	//	
	//	КомпонентыОбмена.XMLСхема = Header.Format;
	//	
	//	ФорматОбмена = РазложитьФорматОбмена(Header.Format);
	//	КомпонентыОбмена.ВерсияФорматаОбмена = ФорматОбмена.Версия;
	//	//КомпонентыОбмена.МенеджерОбмена      = МенеджерОбменаВерсииФормата(КомпонентыОбмена.УзелКорреспондента,
	//	//                                                                   КомпонентыОбмена.ВерсияФорматаОбмена);
	//	КомпонентыОбмена.МенеджерОбмена = МенеджерОбменаЧерезУниверсальныйФормат;
	//	
	//	
	//	
	//	ЧтениеXML.Прочитать(); // Body
	//	
	//	КомпонентыОбмена.ФлагОшибки = Ложь;
	//	
	//КонецЦикла;
	//
	//Если КомпонентыОбмена.ФлагОшибки Тогда
	//	ЧтениеXML.Закрыть();
	//Иначе
	//	КомпонентыОбмена.Вставить(""ФайлОбмена"", ЧтениеXML);
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаОбменаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = """";
	Фильтр = НСтр(""ru = 'Файл обмена'; en = 'Файл обмена'"")
	+ ""(*xml)|*xml"";
	ДиалогОткрытияФайла.Расширение = ""xml"";
	
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = ""Укажите файл обмена"";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		Объект.ИмяФайлаОбмена = ДиалогОткрытияФайла.ПолноеИмяФайла;
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗагрузкуНаСервере()
	КомпонентыОбмена = ОбменДаннымиXDTOСервер.ИнициализироватьКомпонентыОбмена(""Получение"");
	//КомпонентыОбмена.КлючСообщенияЖурналаРегистрации = КлючСообщенияЖурналаРегистрации;
	//КомпонентыОбмена.УзелКорреспондента = УзелОбменаЗагрузкаДанных; 
	КомпонентыОбмена.ЭтоОбменЧерезПланОбмена = Ложь; 
	КомпонентыОбмена.ВедениеПротоколаДанных.ВыводВПротоколИнформационныхСообщений = Ложь;
	РежимЗагрузкиДанных = ""ЗагрузкаВИнформационнуюБазу""; 
	КомпонентыОбмена.СостояниеОбменаДанными.ДатаНачала = ТекущаяДатаСеанса();
	Если ПустаяСтрока(Объект.ИмяФайлаОбмена) Тогда 
		ОбменДаннымиXDTOСервер.ЗаписатьВПротоколВыполнения(КомпонентыОбмена, 15); 
		ОбменДаннымиXDTOСервер.ЗавершитьВедениеПротоколаОбмена(КомпонентыОбмена); 
		Возврат; 
	КонецЕсли; 
	//Если ПродолжитьПриОшибке Тогда 
	// ИспользоватьТранзакции = Ложь; 
	// КомпонентыОбмена.ИспользоватьТранзакции = Ложь; 
	//КонецЕсли; 
	ОткрытьФайлЗагрузки(КомпонентыОбмена, Объект.ИмяФайлаОбмена); 
	Если КомпонентыОбмена.ФлагОшибки Тогда 
		ОбменДаннымиXDTOСервер.ЗавершитьВедениеПротоколаОбмена(КомпонентыОбмена); 
		Возврат; 
	КонецЕсли; 
	РезультатПодсчетаДанныхКЗагрузке = ОбменДаннымиСервер.РезультатПодсчетаДанныхКЗагрузке(Объект.ИмяФайлаОбмена, Истина); 
	КомпонентыОбмена.Вставить(""РазмерФайлаСообщенияОбмена"", РезультатПодсчетаДанныхКЗагрузке.РазмерФайлаСообщенияОбмена); 
	КомпонентыОбмена.Вставить(""КоличествоОбъектовКЗагрузке"", РезультатПодсчетаДанныхКЗагрузке.КоличествоОбъектовКЗагрузке); 
	ОбменДаннымиXDTOСервер.ИнициализироватьТаблицыПравилОбмена(КомпонентыОбмена); 
	Попытка 
		ОбменДаннымиXDTOСервер.ПроизвестиЧтениеДанных(КомпонентыОбмена);
	Исключение 
		СтрокаСообщения = НСтр(""ru = 'Ошибка при загрузке данных: %1'""); 
		СтрокаСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаСообщения, ОписаниеОшибки());
		ОбменДаннымиXDTOСервер.ЗаписатьВПротоколВыполнения(КомпонентыОбмена, СтрокаСообщения,,,,,Истина); 
		КомпонентыОбмена.ФлагОшибки = Истина; 
	КонецПопытки; 
	ОбменДаннымиXDTOСервер.УдалитьВременныеОбъектыСозданныеПоСсылкам(КомпонентыОбмена); 
	КомпонентыОбмена.ФайлОбмена.Закрыть();
	//Если Не КомпонентыОбмена.ФлагОшибки Тогда 
	//
	ОбменДаннымиXDTOСервер.ЗавершитьВедениеПротоколаОбмена(КомпонентыОбмена);
	//ОбменДаннымиXDTOСервер.ИнициализироватьВедениеПротоколаОбмена(КомпонентыОбмена, ИмяФайлаПротоколаОбмена);
	//КомпонентыОбмена = ОбменДаннымиXDTOСервер.ИнициализироватьКомпонентыОбмена(""Получение"");
	////КомпонентыОбмена.КлючСообщенияЖурналаРегистрации = КлючСообщенияЖурналаРегистрации;
	////КомпонентыОбмена.УзелКорреспондента = УзелОбменаЗагрузкаДанных;
	//КомпонентыОбмена.ЭтоОбменЧерезПланОбмена = Ложь;
	//
	//КомпонентыОбмена.ВедениеПротоколаДанных.ВыводВПротоколИнформационныхСообщений = Ложь;
	//РежимЗагрузкиДанных = ""ЗагрузкаВИнформационнуюБазу"";
	//
	//КомпонентыОбмена.СостояниеОбменаДанными.ДатаНачала = ТекущаяДатаСеанса();
	//
	////ОбменДаннымиXDTOСервер.ИнициализироватьВедениеПротоколаОбмена(КомпонентыОбмена, ИмяФайлаПротоколаОбмена);
	//
	//Если ПустаяСтрока(Объект.ИмяФайлаОбмена) Тогда
	//	ОбменДаннымиXDTOСервер.ЗаписатьВПротоколВыполнения(КомпонентыОбмена, 15);
	//	//ОбменДаннымиXDTOСервер.ЗавершитьВедениеПротоколаОбмена(КомпонентыОбмена);
	//	Возврат;
	//КонецЕсли;
	//
	////Если ПродолжитьПриОшибке Тогда
	////	ИспользоватьТранзакции = Ложь;
	////	КомпонентыОбмена.ИспользоватьТранзакции = Ложь;
	////КонецЕсли;
	//
	//ОткрытьФайлЗагрузки(КомпонентыОбмена, Объект.ИмяФайлаОбмена);
	//
	//Если КомпонентыОбмена.ФлагОшибки Тогда
	//	//ОбменДаннымиXDTOСервер.ЗавершитьВедениеПротоколаОбмена(КомпонентыОбмена);
	//	Если КомпонентыОбмена.Свойство(""ФайлОбмена"") Тогда
	//		КомпонентыОбмена.ФайлОбмена.Закрыть();
	//	КонецЕсли;
	//	Возврат;
	//КонецЕсли;
	//
	//РезультатПодсчетаДанныхКЗагрузке = ОбменДаннымиСервер.РезультатПодсчетаДанныхКЗагрузке(Объект.ИмяФайлаОбмена, Истина);
	//КомпонентыОбмена.Вставить(""РазмерФайлаСообщенияОбмена"", РезультатПодсчетаДанныхКЗагрузке.РазмерФайлаСообщенияОбмена);
	//КомпонентыОбмена.Вставить(""КоличествоОбъектовКЗагрузке"", РезультатПодсчетаДанныхКЗагрузке.КоличествоОбъектовКЗагрузке);
	//
	//ОбменДаннымиXDTOСервер.ИнициализироватьТаблицыПравилОбмена(КомпонентыОбмена);
	//
	//Попытка
	//	ОбменДаннымиXDTOСервер.ПроизвестиЧтениеДанных(КомпонентыОбмена);
	//Исключение
	//	
	//	СтрокаСообщения = НСтр(""ru = 'Ошибка при загрузке данных: %1'"");
	//	СтрокаСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаСообщения, ОписаниеОшибки());
	//	ОбменДаннымиXDTOСервер.ЗаписатьВПротоколВыполнения(КомпонентыОбмена, СтрокаСообщения,,,,,Истина);
	//	КомпонентыОбмена.ФлагОшибки = Истина;
	//КонецПопытки;
	//
	//ОбменДаннымиXDTOСервер.УдалитьВременныеОбъектыСозданныеПоСсылкам(КомпонентыОбмена);
	//
	//КомпонентыОбмена.ФайлОбмена.Закрыть();
	//
	//Если Не КомпонентыОбмена.ФлагОшибки Тогда
	//	
	//	//// Запишем информацию о номере входящего сообщения.
	//	//ОбъектУзла = УзелОбменаЗагрузкаДанных.ПолучитьОбъект();
	//	//ОбъектУзла.НомерПринятого = КомпонентыОбмена.НомерВходящегоСообщения;
	//	//ОбъектУзла.ДополнительныеСвойства.Вставить(""ПолучениеСообщенияОбмена"");
	//	//ОбъектУзла.Записать();
	//	СообщениеПользователю = Новый СообщениеПользователю;	
	//	СообщениеПользователю.Текст = ""Загрузка выполнена успешно!"";
	//	СообщениеПользователю.Сообщить();

	//КонецЕсли;
	//
	////ОбменДаннымиXDTOСервер.ЗавершитьВедениеПротоколаОбмена(КомпонентыОбмена);
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗагрузку(Команда)
	ВыполнитьЗагрузкуНаСервере();
КонецПроцедуры
",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",af4e9133-8304-43d4-929f-b57ddeea5ecf}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{1,
{0,ff3ec143-1d89-45d5-8265-592164d8cebb}
}
},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,1,
{7,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыполнитьЗагрузку",
{1,1,
{"ru","Выполнить загрузку"}
},
{1,1,
{"ru","Выполнить загрузку"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ВыполнитьЗагрузку",3,0,0,
{0,0},1,0}
},
{0,0},
{0,0},0,0}